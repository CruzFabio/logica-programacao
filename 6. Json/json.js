/**
JSON (JavaScript Object Notation)

## O que √© JSON?
‚úÖ Trata-se de um objeto simples composto por uma chave (identificador) e seu valor com o objetivo de tranferir dados.
‚úÖ Sua estrutura b√°sica √©: Pares de chave-valor delimitados por ":" e separados por ","
‚úÖ A finalidade de um JSON √© armazenar e trocar dados estruturados entre diferentes sistemas

 */
/**
//EXEMPLO 1 
let invoice = {
    name: "Fabio",
    age: 44,
    products: {
        0: ["Mouse series G", 159.90],
        1: ["Teclado MK", 328.90],
        2: ["Monitor LG 21''", 490.90]

    } 

}

console.log(invoice)
//Para pegar um dado espec√≠fico basta passar a vari√°vel + a chave que deseja
console.log(invoice.name)
console.log(invoice.products)

console.log("-----------------------------------------------------------")
*/

/**
//EXEMPLO 2 - Utilizando uma fun√ß√£o para pegar os dados.
let invoice = {
    name: "Fabio",
    age: 44,
    products: {
        0: ["Mouse series G", 159.90],
        1: ["Teclado MK", 328.90],
        2: ["Monitor LG 21''", 490.90]

    } 

}
//üí° Ao inv√©s de concatena√ß√£o, vamos utilizar a crase para realizar a interpola√ß√£o de String, desta forma √© poss√≠vel concatenar vari√°veis com texto de maneira mais pr√°tica.
//Utilizaremos o $ passando entre as chaves a vari√°vel e o dado que desejamos. 
function generateInvoice(invoice){
    console.log("----------------------------------------------------")
    console.log(`Comprador:  ${invoice.name}`)
    console.log(`Idade: ${invoice.age}`)
    console.log("----------------------------------------------------")
    console.log(`Descri√ß√£o do Produto: ${invoice.products}`)
}

generateInvoice(invoice)

console.log("----------------------------------------------------")
\\A sa√≠da dos produtos exibir√° [object Object] por se tratar de uma lista h√° uma maneira espec√≠fica de tratar isso. Veremos a seguir.
 */

//EXEMPLO 3 - Exibindo uma lista com o uso do FOR IN 
let invoice = {
    name: "Fabio",
    age: 44,
    products: {
        0: ["Mouse series G", 159.90],
        1: ["Teclado MK", 328.90],
        2: ["Monitor LG 21''", 490.90],
        3: ["PS5", 3459.89]

    } 
}

function generateInvoice(invoice){
    console.log("----------------------------------------------------")
    console.log(`Comprador:  ${invoice.name}`)
    console.log(`Idade: ${invoice.age}`)
    console.log("----------------------------------------------------")

    for(let index in invoice.products){
        let [productName, productPrice] = invoice.products[index]
        console.log(` - ${productName}: R$ ${productPrice}`)
        //no for in n√£o precisamos indicar a posi√ß√£o especifica, basta passar a vari√°vel de nosso for in dessa forma ser√° implementado automaticamente.
    }

    //Sempre que existir um FOR IN sabemos que estamos percorrendo um objeto ou uma lista no JS.
}

generateInvoice(invoice)

console.log("----------------------------------------------------")

/**
 * Este √© um exemplo de como seria transferir os dados sem o uso do JSON. Perceba o quanto seria trabalhoso seguir desta forma, pois a cada inclus√£o de √≠tens teremos de alterar dados em v√°rias partes do c√≥digo.
 * 
let name = "Fabio"
let age = 44;
let products = ["Mouse series G", "Teclado MK", "Monitor LG 21''"]
let productsValues = [159.90, 328.90, 490.90]

function generateInvoice(name, age, products, productsValues){
    console.log("----------------------------------------------------")
    console.log("Comprador: " + name)
    console.log("Idade: " + age)
    console.log("----------------------------------------------------")
    console.log("Descri√ß√£o do Produto: " + products[0])
    console.log("Valor: " + productsValues[0])

}

generateInvoice(name, age, products, productsValues)

console.log("-----------------------------------------------------------")

 */